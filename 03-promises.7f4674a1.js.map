{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACRC,QAAS,OAyCb,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEzBC,YAAW,KAEeC,KAAKC,SAAW,GAIlCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CArDJO,SAASC,cAAc,SAU/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,iBAEF,IAAMX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAEhCH,EAAQI,OAAOJ,EAAMK,OACrBJ,EAAOG,OAAOH,EAAKI,OACnBH,EAASE,OAAOF,EAAOG,OAMvB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,IACvCpB,EAAcoB,EAAUN,GACnBO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACfP,EAAAE,OAAOyB,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAElEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAChBP,EAAAE,OAAO2B,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEpEY,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n    timeout: 11000,\n});\n\nconst form = document.querySelector('.form');\n// const delayEl = document.querySelector('[name=\"delay\"]');\n// const stepEl = document.querySelector('[name=\"step\"]');\n// const amountEl = document.querySelector('[name=\"amount\"]');\n// const btnSubmit = document.querySelector('[type=\"submit\"]');\n// let position = 0;\n\n\n// console.log(`form`);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n\n    let { delay, step, amount } = e.currentTarget;\n\n    delay = Number(delay.value);\n    step = Number(step.value);\n    amount = Number(amount.value);\n\n    // console.log(delay);\n    // console.log(step);\n    // console.log(amount);\n\n    for (let position = 1; position <= amount; position++) {\n        createPromise(position, delay)\n            .then(({ position, delay }) => {\n                Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n        delay += step;\n    }\n\n};\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n\n        setTimeout(() => {\n\n            const shouldResolve = Math.random() > 0.3;\n\n            if (shouldResolve) {\n                // Fulfill\n                resolve({ position, delay });\n            } else {\n                // Reject\n                reject({ position, delay });\n            }\n        }, delay)\n    });\n};\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","Notify","init","timeout","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","Number","value","position1","then","success","catch","failure"],"version":3,"file":"03-promises.7f4674a1.js.map"}