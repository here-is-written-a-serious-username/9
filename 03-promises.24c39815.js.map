{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4CA,SAASC,EAAcC,EAAUC,GAE7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEzBC,YAAW,WAEeC,KAAKC,SAAW,GAIlCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IAzDXJ,EAAAW,OAAOC,KAAK,CACRC,QAAS,OAGAC,SAASC,cAAc,SAU/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,iBAEF,IAA8BC,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBf,MAAOkB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEnBF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAMvB,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,IACvCxB,EAAcwB,EAAUL,GACnBM,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACfJ,EAAAW,OAAOkB,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEhE2B,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAChBJ,EAAAW,OAAOqB,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAElEiB,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n    timeout: 11000,\n});\n\nconst form = document.querySelector('.form');\n// const delayEl = document.querySelector('[name=\"delay\"]');\n// const stepEl = document.querySelector('[name=\"step\"]');\n// const amountEl = document.querySelector('[name=\"amount\"]');\n// const btnSubmit = document.querySelector('[type=\"submit\"]');\n// let position = 0;\n\n\n// console.log(`form`);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n\n    let { delay, step, amount } = e.currentTarget;\n\n    delay = Number(delay.value);\n    step = Number(step.value);\n    amount = Number(amount.value);\n\n    // console.log(delay);\n    // console.log(step);\n    // console.log(amount);\n\n    for (let position = 1; position <= amount; position++) {\n        createPromise(position, delay)\n            .then(({ position, delay }) => {\n                Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n        delay += step;\n    }\n\n};\n\nfunction createPromise(position, delay) {\n\n    return new Promise((resolve, reject) => {\n\n        setTimeout(() => {\n\n            const shouldResolve = Math.random() > 0.3;\n\n            if (shouldResolve) {\n                // Fulfill\n                resolve({ position, delay });\n            } else {\n                // Reject\n                reject({ position, delay });\n            }\n        }, delay)\n    });\n};\n\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","Notify","init","timeout","document","querySelector","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay1","step","amount","Number","value","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.24c39815.js.map"}